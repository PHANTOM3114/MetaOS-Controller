name: MetaOSController Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build: # Назва нашого єдиного job'а
    runs-on: ubuntu-latest

    strategy: # Матриця стратегій тепер знаходиться всередині job'a
      fail-fast: false
      matrix:
        # Поки що залишимо один варіант для простоти, потім можеш додати інші
        variant: [asio]
        include:
          - variant: asio
            # Прямо тут визначаємо, які залежності потрібні для цього варіанту
            dependencies: "libgrpc++-dev libprotobuf-dev protobuf-compiler libgtest-dev"
            cmake_args: "-DGRPCXX_USE_ASIO=ON" # І які аргументи для CMake

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive' # Затягуємо сабмодулі, якщо вони є

      - name: Install dependencies
        run: |
          sudo apt-get update
          # Встановлюємо базові інструменти і залежності з нашої матриці
          sudo apt-get install -y build-essential cmake ninja-build g++ ${{ matrix.dependencies }}

      - name: Configure CMake
        # -S . означає, що вихідний код в поточній папці
        # -B .build означає, що результати збірки будуть в папці .build
        run: cmake -S . -B .build -G Ninja -DCMAKE_BUILD_TYPE=Release ${{ matrix.cmake_args }}

      - name: Build
        # Запускаємо компіляцію
        run: cmake --build .build --config Release